# TMT test plan definition
# https://tmt.readthedocs.io/en/latest/overview.html

# Baseline common for all test plans
#######################################################################
summary: Strimzi systemtest pipelines
discover:
  how: fmf

# Required HW
provision:
  hardware:
    memory: ">= 16 GiB"
    cpu:
      processors: ">= 4"

# Install required packages and scripts for running streams-e2e suite
prepare:
  - name: Clean cache
    how : shell
    script: |
        OS=$(cat /etc/redhat-release || true)
        if [[ ${OS} == *"CentOS"* ]]; then
            sudo yum -y clean dbcache
        else
            sudo dnf -y clean dbcache
        fi

  - name: Install packages
    how: install
    package:
      - wget
      - xz
      - make
      - git
      - zip
      - coreutils

  - name: Install docker-ce
    how: shell
    script: |
      OS=$(cat /etc/redhat-release || true)
      if [[ ${OS} == *"CentOS"* ]]; then
        sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      else
        sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
      fi

      sudo yum install -y docker-ce
      sudo systemctl enable docker --now

  - name: Install oc kubectl client
    how: shell
    script: |
      PLATFORM=$(uname -m)
      URL="http://mirror.openshift.com/pub/openshift-v4/${PLATFORM}/clients/ocp/stable/openshift-client-linux.tar.gz"
      mkdir -p /tmp/openshift
      wget ${URL} -O openshift.tar.gz -q
      tar xzf openshift.tar.gz -C /tmp/openshift
      sudo cp /tmp/openshift/oc /usr/bin/oc
      sudo cp /tmp/openshift/kubectl /usr/bin/kubectl
      sudo rm -rf /tmp/openshift/
      sudo rm -rf openshift.tar.gz

  - name: Install tkn
    how: shell
    script: |
      ARCH=$(uname -m)
      URL="https://github.com/tektoncd/cli/releases/download/v0.42.0/tektoncd-cli-0.42.0_Linux-64bit.rpm"
      if [[ $ARCH == "aarch64" ]]; then URL="https://github.com/tektoncd/cli/releases/download/v0.42.0/tektoncd-cli-0.42.0_Linux-ARM64.rpm"; fi
      sudo rpm -i ${URL}

  - name: Install kind
    how: shell
    script: |
      ARCH=$(uname -m)
      if [[ $ARCH == "x86_64" ]]; then ARCH="amd64"; fi
      if [[ $ARCH == "aarch64" ]]; then ARCH="arm64"; fi
      ./tmt/scripts/setup-kind.sh ${ARCH}

  - name: Install Tekton Pipelines on kind cluster
    how: shell
    script: |
      # Install Tekton Pipelines
      kubectl apply --filename https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml
      
      # Wait for Tekton Pipelines to be ready
      kubectl wait --for=condition=Ready pods --all -n tekton-pipelines --timeout=300s

  - name: Build and push strimzi-systemtest image to kind registry
    how: shell
    script: |
      HOST=$(hostname --ip-address | grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' | awk '$1 != "127.0.0.1" { print $1 }' | head -1)
      ARCH=$(uname -m)
      if [[ $ARCH == "x86_64" ]]; then ARCH="amd64"; fi
      if [[ $ARCH == "aarch64" ]]; then ARCH="arm64"; fi
      # Build the strimzi-systemtest image
      docker build --platform linux/${ARCH} -t ${HOST}:5001/strimzi-systemtest:latest -f container/Containerfile .
      
      # Push to kind registry
      docker push ${HOST}:5001/strimzi-systemtest:latest

# Discover tmt defined tests in tests/ folder
execute:
  how: tmt

#######################################################################

/smoke:
  summary: Run tkn smoke tests
  discover+:
    test:
      - smoke

